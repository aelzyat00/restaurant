// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/auth/login" | "/auth/sign-up" | "/auth/sign-up-success" | "/auth/update-password" | "/cart" | "/checkout" | "/customer" | "/dashboard" | "/delivery" | "/delivery/history" | "/delivery/profile" | "/delivery/stats" | "/orders" | "/orders/[id]/confirmation" | "/orders/[id]/tracking" | "/restaurant" | "/restaurant/menu" | "/restaurant/orders" | "/restaurant/reports" | "/restaurants" | "/restaurants/[id]"
type AppRouteHandlerRoutes = "/api/delivery/orders" | "/api/delivery/orders/[id]/assign" | "/api/orders" | "/api/orders/[id]/tracking" | "/api/orders/[id]/update-status"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/delivery/orders": {}
  "/api/delivery/orders/[id]/assign": { "id": string; }
  "/api/orders": {}
  "/api/orders/[id]/tracking": { "id": string; }
  "/api/orders/[id]/update-status": { "id": string; }
  "/auth/login": {}
  "/auth/sign-up": {}
  "/auth/sign-up-success": {}
  "/auth/update-password": {}
  "/cart": {}
  "/checkout": {}
  "/customer": {}
  "/dashboard": {}
  "/delivery": {}
  "/delivery/history": {}
  "/delivery/profile": {}
  "/delivery/stats": {}
  "/orders": {}
  "/orders/[id]/confirmation": { "id": string; }
  "/orders/[id]/tracking": { "id": string; }
  "/restaurant": {}
  "/restaurant/menu": {}
  "/restaurant/orders": {}
  "/restaurant/reports": {}
  "/restaurants": {}
  "/restaurants/[id]": { "id": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
